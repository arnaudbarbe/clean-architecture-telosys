#set( $Tools = $loader.loadClass("tools.EntityBuilder"))
$Tools.initialize($ROOT_PKG)
package ${target.javaPackageFromFolder(${SRC})};

$Tools.getModelImport($entity)

import org.springframework.hateoas.RepresentationModel;

import lombok.AccessLevel;
import lombok.AllArgsConstructor;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.ToString;
import lombok.experimental.FieldDefaults;

@Getter
@ToString 
@EqualsAndHashCode(callSuper = true, of= {$Tools.getHashCodeEqualsLombokAttributes($entity)})
@NoArgsConstructor(access = AccessLevel.PRIVATE)
@AllArgsConstructor(access = AccessLevel.PUBLIC)
@FieldDefaults(level = AccessLevel.PRIVATE)
public class ${entity.name}Model extends RepresentationModel<${entity.name}Model> implements Model {

	private static final long serialVersionUID = 1L;
	
$Tools.getModelDeclaration($entity)

	public ${ROOT_PKG}.core.model.${entity.name} toEntity() {
		return ${ROOT_PKG}.core.model.${entity.name}.builder()
$Tools.getDtoToEntityBody($entity)
				.build();
	}
	
	public static ${entity.name}Model fromEntity(final ${ROOT_PKG}.core.model.${entity.name} entity) {
		if (entity == null) {
			return null;
		} else {
			return new ${entity.name}Model(
$Tools.getModelFromEntityBody($entity)
			);
		}
	}
}
