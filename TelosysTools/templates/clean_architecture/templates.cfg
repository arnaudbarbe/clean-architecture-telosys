#---------------------------------------------------------
# Templates bundle configuration file
# 5 values separated by ";"
# . value 1 : the label to be displayed 
# . value 2 : the file to be generated ( with variables replacement : ${BEANNAME}, ${BEANNAME_UC}, ${BEANNAME_LC} )
# . value 3 : the project folder where to generate ( with variables replacement )
# . value 4 : the template to use
# . value 5 : number of execution : "1" for "ONCE" for all entities, default is multiple executions ( executed for each entity )
#---------------------------------------------------------

# application 

Application			  				; CleanArchitectureApplication.java   			; ${SRC}/${ROOT_PKG}										  									; Application.vm							; 1

# DTO 

Token dto			  				; TokenDto.java   								; ${SRC}/${ROOT_PKG}/infrastructure/delivery/dto			  									; DtoToken.vm								; 1
User dto			  				; UserDto.java   								; ${SRC}/${ROOT_PKG}/infrastructure/delivery/dto			  									; DtoUser.vm								; 1
dto			  						; Dto.java   									; ${SRC}/${ROOT_PKG}/infrastructure/delivery/dto/v1			  									; Dto.vm									; 1
dto	entity	  						; ${BEANNAME}Dto.java   						; ${SRC}/${ROOT_PKG}/infrastructure/delivery/dto/v1			  									; DtoEntity.vm
model entity	  					; ${BEANNAME}Model.java   						; ${SRC}/${ROOT_PKG}/infrastructure/delivery/controller/v1/model									; ModelEntity.vm
model 			  					; Model.java   									; ${SRC}/${ROOT_PKG}/infrastructure/delivery/controller/v1/model									; Model.vm									; 1

# Domain class 

Client rabbit mq channel 	     	; RabbitMQ${BEANNAME}Channel.java				; ${SRC}/${ROOT_PKG}/client/configuration/rabbitmq/v1/channel     								; EntityChannel.vm
Client rabbit mq publisher 		 	; ${BEANNAME}Publisher.java   					; ${SRC}/${ROOT_PKG}/client/configuration/rabbitmq/v1/publisher     							; EntityPublisher.vm
Entity repository   				; ${BEANNAME}Repository.java   					; ${SRC}/${ROOT_PKG}/core/repository     														; EntityRepository.vm
Entity  							; ${BEANNAME}.java   							; ${SRC}/${ROOT_PKG}/core/model		     														; Entity.vm
Entity service  					; ${BEANNAME}Service.java   					; ${SRC}/${ROOT_PKG}/core/service																; EntityService.vm
Entity domain service  				; Domain${BEANNAME}Service.java   				; ${SRC}/${ROOT_PKG}/core/service																; EntityDomainService.vm

# Event Sourcing aspect

Event				  				; Event.java   									; ${SRC}/${ROOT_PKG}/infrastructure/configuration/eventdriven  									; Event.vm									; 1
Event aspect		  				; ${BEANNAME}Aspect.java  						; ${SRC}/${ROOT_PKG}/infrastructure/configuration/eventdriven/aspect							; EventAspect.vm									
Event channel		  				; RabbitMQ${BEANNAME}EventChannel.java			; ${SRC}/${ROOT_PKG}/infrastructure/configuration/rabbitmq/v1/channel							; EventChannel.vm									
Entity listener						; RabbitMQ${BEANNAME}EntityListener.java		; ${SRC}/${ROOT_PKG}/infrastructure/configuration/rabbitmq/v1/listener							; EntityListener.vm
Event publisher						; ${BEANNAME}EventPublisher.java				; ${SRC}/${ROOT_PKG}/infrastructure/configuration/rabbitmq/v1/publisher							; EventPublisher.vm
Entity create handler				; MessageCreate${BEANNAME}Handler.java			; ${SRC}/${ROOT_PKG}/infrastructure/delivery/consumer/handler/v1								; HandlerCreateEntityMessage.vm	
Entity delete handler				; MessageDelete${BEANNAME}Handler.java			; ${SRC}/${ROOT_PKG}/infrastructure/delivery/consumer/handler/v1								; HandlerDeleteEntityMessage.vm	
Entity update handler				; MessageUpdate${BEANNAME}Handler.java			; ${SRC}/${ROOT_PKG}/infrastructure/delivery/consumer/handler/v1								; HandlerUpdateEntityMessage.vm	

#Controller

Auth controller		  				; AuthController.java   						; ${SRC}/${ROOT_PKG}/infrastructure/delivery/controller/auth  									; ControllerAuth.vm							; 1
Tool controller		  				;ToolsController.java   						; ${SRC}/${ROOT_PKG}/infrastructure/delivery/controller/v1  									; ControllerTool.vm							; 1
Entity controller					;${BEANNAME}Controller.java   					; ${SRC}/${ROOT_PKG}/infrastructure/delivery/controller/v1  									; ControllerEntity.vm							

#Exception

Bad credential exception  			; BadCredentialsException.java   				; ${SRC}/${ROOT_PKG}/core/exception     														; ExceptionBadCredentialsException.vm		; 1
Bad parameter exception  			; BadParameterException.java     				; ${SRC}/${ROOT_PKG}/core/exception     														; ExceptionBadParameterException.vm			; 1
Bad uuid exception        			; BadUuidException.java          				; ${SRC}/${ROOT_PKG}/core/exception     														; ExceptionBadUuidException.vm				; 1
domain exception          			; DomainException.java           				; ${SRC}/${ROOT_PKG}/core/exception     														; ExceptionDomainException.vm				; 1
Entity already exception  			; EntityAlreadyExistException.java 			  	; ${SRC}/${ROOT_PKG}/core/exception     														; ExceptionEntityAlreadyExistException.vm	; 1
Entity not found exception			; EntityNotFoundException.java  				; ${SRC}/${ROOT_PKG}/core/exception     														; ExceptionEntityNotFoundException.vm		; 1
forbidden exception  	  			; ForbiddenException.java    					; ${SRC}/${ROOT_PKG}/core/exception     														; ExceptionForbiddenException.vm			; 1
Bad allowed exception     			; NotAllowedException.java   					; ${SRC}/${ROOT_PKG}/core/exception     														; ExceptionNotAllowedException.vm			; 1
User already exception    			; UserAlreadyExistException.java   			   	; ${SRC}/${ROOT_PKG}/core/exception    															; ExceptionUserAlreadyExistException.vm		; 1
Bad credential exception  			; ValidationException.java   					; ${SRC}/${ROOT_PKG}/core/exception     														; ExceptionValidationException.vm			; 1
Domain error						; DomainError.java   							; ${SRC}/${ROOT_PKG}/core/model		     														; DomainError.vm							; 1

exception  processor 	  			; ExceptionProcessor.java   					; ${SRC}/${ROOT_PKG}/infrastructure/configuration/advice     									; ExceptionProcessor.vm						; 1

#Configuration

RabbitMQ configuration	  			; RabbitMQConfiguration.java   					; ${SRC}/${ROOT_PKG}/infrastructure/configuration/rabbitmq    									; ConfigurationRabbitMQ.vm					; 1
Cassandra configuration	  			; CassandraConfiguration.java 			  		; ${SRC}/${ROOT_PKG}/infrastructure/configuration/cassandra    									; ConfigurationCassandra.vm					; 1
Postgres configuration	  			; PostgresConfiguration.java   					; ${SRC}/${ROOT_PKG}/infrastructure/configuration/postgres    									; ConfigurationPostgres.vm					; 1
CORS configuration	  				; CORSConfiguration.java   						; ${SRC}/${ROOT_PKG}/infrastructure/configuration/cors	    									; ConfigurationCORS.vm						; 1
Keycloak configuration	 			; KeycloakConfiguration.java   					; ${SRC}/${ROOT_PKG}/infrastructure/configuration/security    									; ConfigurationKeycloak.vm					; 1
Spring keycloak configuration		; KeycloakSpringBootConfig.java					; ${SRC}/${ROOT_PKG}/infrastructure/configuration/security										; ConfigurationSpringBootKeycloak.vm		; 1
Security Role						; Role.java										; ${SRC}/${ROOT_PKG}/infrastructure/configuration/security										; SecurityRole.vm							; 1
Service configuration				; ServiceConfiguration.java						; ${SRC}/${ROOT_PKG}/infrastructure/configuration/service										; ConfigurationService.vm					; 1
Swagger configuration				; SwaggerConfiguration.java						; ${SRC}/${ROOT_PKG}/infrastructure/configuration/swagger										; ConfigurationSwagger.vm					; 1

Auth service						; AuthService.java								; ${SRC}/${ROOT_PKG}/infrastructure/service														; ServiceAuth.vm							; 1
